<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="ComboBoxItem">
        <Border x:Name="border"
                Background="Transparent"
                CornerRadius="5">
            <ContentPresenter x:Name="content"
                              Margin="5"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center" />
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource primary-200}" />
                <Setter TargetName="border" Property="Opacity" Value="0.9" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource bg-200}" />
        <Setter Property="BorderBrush" Value="{DynamicResource primary-200}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource text-100}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Margin="5,0,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Text}" />

                            <ToggleButton x:Name="toggle_button"
                                          Grid.ColumnSpan="2"
                                          Width="{Binding ElementName=border, Path=ActualWidth}"
                                          HorizontalContentAlignment="Left"
                                          VerticalContentAlignment="Center"
                                          Panel.ZIndex="100"
                                          ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{x:Null}">

                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Border HorizontalAlignment="Stretch" Background="Transparent" />
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Popup x:Name="popup"
                                   MaxHeight="300"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border, AncestorLevel=1}}"
                                   PopupAnimation="Slide"
                                   VerticalOffset="3">

                                <Border MinWidth="{Binding ElementName=border, Path=ActualWidth}"
                                        MaxHeight="300"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4"
                                        SnapsToDevicePixels="True">

                                    <ScrollViewer Padding="0"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="3" IsItemsHost="True" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                            <Viewbox x:Name="view_box"
                                     Grid.Column="1"
                                     Margin="4"
                                     Panel.ZIndex="-100">
                                <TextBlock x:Name="polyline"
                                           FontFamily="../Fonts/#iconfont"
                                           Foreground="{DynamicResource primary-100}"
                                           RenderTransformOrigin="0.5 0.5"
                                           Text="&#xe687;">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform Angle="90" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource bg-300}" />
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="polyline" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>